install.packages("MASS")
> library(MASS)

Attaching package: 'MASS'

The following object is masked _by_ '.GlobalEnv':
  
  housing

Warning messages:
  1: In .recacheSubclasses(def@className, def, doSubclasses, env) :
  undefined subclass "externalRefMethod" of class "kfunction"; definition not updated
2: package 'MASS' was built under R version 3.2.2 
data("biopsy")
head(biopsy)
ID V1 V2 V3 V4 V5 V6 V7 V8 V9     class
1 1000025  5  1  1  1  2  1  3  1  1    benign
2 1002945  5  4  4  5  7 10  3  2  1    benign
3 1015425  3  1  1  1  2  2  3  1  1    benign
4 1016277  6  8  8  1  3  4  3  7  1    benign
5 1017023  4  1  1  3  2  1  3  1  1    benign
6 1017122  8 10 10  8  7 10  9  7  1 malignant
> str(biopsy)
'data.frame':	699 obs. of  11 variables:
  $ ID   : chr  "1000025" "1002945" "1015425" "1016277" ...
$ V1   : int  5 5 3 6 4 8 1 2 2 4 ...
$ V2   : int  1 4 1 8 1 10 1 1 1 2 ...
$ V3   : int  1 4 1 8 1 10 1 2 1 1 ...
$ V4   : int  1 5 1 1 3 8 1 1 1 1 ...
$ V5   : int  2 7 2 3 2 7 2 2 2 2 ...
$ V6   : int  1 10 2 4 1 10 10 1 1 1 ...
$ V7   : int  3 3 3 3 3 9 3 3 1 2 ...
$ V8   : int  1 2 1 7 1 7 1 1 1 1 ...
$ V9   : int  1 1 1 1 1 1 1 1 5 1 ...
$ class: Factor w/ 2 levels "benign","malignant": 1 1 1 1 1 2 1 1 1 1 ...
> biopsy$ID = NULL
> head(biopsy)
V1 V2 V3 V4 V5 V6 V7 V8 V9     class
1  5  1  1  1  2  1  3  1  1    benign
2  5  4  4  5  7 10  3  2  1    benign
3  3  1  1  1  2  2  3  1  1    benign
4  6  8  8  1  3  4  3  7  1    benign
5  4  1  1  3  2  1  3  1  1    benign
6  8 10 10  8  7 10  9  7  1 malignant
> names(biopsy) = c("thick", "u.size", "u.shape", "adhsn", "s.size", "nucl", "chrom", "n.nuc", "mit", "class")
> names(biopsy)
[1] "thick"   "u.size"  "u.shape" "adhsn"   "s.size"  "nucl"    "chrom"   "n.nuc"   "mit"     "class"  
> head(biopsy)
thick u.size u.shape adhsn s.size nucl chrom n.nuc mit     class
1     5      1       1     1      2    1     3     1   1    benign
2     5      4       4     5      7   10     3     2   1    benign
3     3      1       1     1      2    2     3     1   1    benign
4     6      8       8     1      3    4     3     7   1    benign
5     4      1       1     3      2    1     3     1   1    benign
6     8     10      10     8      7   10     9     7   1 malignant
> 
  > biopsy.v2 = na.omit(biopsy)
> head(biopsy)
thick u.size u.shape adhsn s.size nucl chrom n.nuc mit     class
1     5      1       1     1      2    1     3     1   1    benign
2     5      4       4     5      7   10     3     2   1    benign
3     3      1       1     1      2    2     3     1   1    benign
4     6      8       8     1      3    4     3     7   1    benign
5     4      1       1     3      2    1     3     1   1    benign
6     8     10      10     8      7   10     9     7   1 malignant
> dim(biopsy)
[1] 699  10
> 
  > install.packages("reshape2")
Error in install.packages : Updating loaded packages
> install.packages("reshape2")
Installing package into 'C:/Users/ckim25/Documents/R/win-library/3.2'
(as 'lib' is unspecified)

There is a binary version available but the source version is later:
  binary source needs_compilation
reshape2  1.4.2  1.4.3              TRUE

Do you want to install from sources the package which needs compilation?
  y/n: n
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.2/reshape2_1.4.2.zip'
Content type 'application/zip' length 507052 bytes (495 KB)
downloaded 495 KB

package 'reshape2' successfully unpacked and MD5 sums checked
Warning in install.packages :
  cannot remove prior installation of package 'reshape2'

The downloaded binary packages are in
C:\Users\ckim25\AppData\Local\Temp\Rtmpo3JRPE\downloaded_packages
> library(reshape2)
Error in library(reshape2) : there is no package called 'reshape2'
In addition: Warning message:
  In read.dcf(file.path(p, "DESCRIPTION"), c("Package", "Version")) :
  cannot open compressed file 'C:/Users/ckim25/Documents/R/win-library/3.2/reshape2/DESCRIPTION', probable reason 'No such file or directory'
> set.seed(123) 
> ind = sample(2, nrow(biopsy.v2), replace=TRUE, prob=c(0.7, 0.3))
> train = biopsy.v2[ind==1,]
> head(train, n=3)
thick u.size u.shape adhsn s.size nucl chrom n.nuc mit     class
1     5      1       1     1      2    1     3     1   1    benign
3     3      1       1     1      2    2     3     1   1    benign
6     8     10      10     8      7   10     9     7   1 malignant
> dim(train)
[1] 474  10
> test = biopsy.v2[ind==2,]
> dim(test)
[1] 209  10
table(train$class)

benign malignant 
302       172 
table(test$class)

benign malignant 
142        67 
> full.fit = glm(class ~ ., family=binomial, data=train)
> summary(full.fit)

Call:
  glm(formula = class ~ ., family = binomial, data = train)

Deviance Residuals: 
  Min       1Q   Median       3Q      Max  
-3.3397  -0.1387  -0.0716   0.0321   2.3559  

Coefficients:
  Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -9.4293     1.2273  -7.683 1.55e-14 ***
  thick         0.5252     0.1601   3.280 0.001039 ** 
  u.size       -0.1045     0.2446  -0.427 0.669165    
u.shape       0.2798     0.2526   1.108 0.268044    
adhsn         0.3086     0.1738   1.776 0.075722 .  
s.size        0.2866     0.2074   1.382 0.167021    
nucl          0.4057     0.1213   3.344 0.000826 ***
  chrom         0.2737     0.2174   1.259 0.208006    
n.nuc         0.2244     0.1373   1.635 0.102126    
mit           0.4296     0.3393   1.266 0.205402    
---
  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for binomial family taken to be 1)

Null deviance: 620.989  on 473  degrees of freedom
Residual deviance:  78.373  on 464  degrees of freedom
AIC: 98.373

Number of Fisher Scoring iterations: 8

> confint(full.fit)
Waiting for profiling to be done...
2.5 %     97.5 %
  (Intercept) -12.23786660 -7.3421509
thick         0.23250518  0.8712407
u.size       -0.56108960  0.4212527
u.shape      -0.24551513  0.7725505
adhsn        -0.02257952  0.6760586
s.size       -0.11769714  0.7024139
nucl          0.17687420  0.6582354
chrom        -0.13992177  0.7232904
n.nuc        -0.03813490  0.5110293
mit          -0.14099177  1.0142786
Warning message:
  In read.dcf(file.path(p, "DESCRIPTION"), c("Package", "Version")) :
  cannot open compressed file 'C:/Users/ckim25/Documents/R/win-library/3.2/MASS/DESCRIPTION', probable reason 'No such file or directory'
> exp(coef(full.fit))
(Intercept)        thick       u.size      u.shape        adhsn       s.size         nucl        chrom        n.nuc          mit 
8.033466e-05 1.690879e+00 9.007478e-01 1.322844e+00 1.361533e+00 1.331940e+00 1.500309e+00 1.314783e+00 1.251551e+00 1.536709e+00 
> train$probs = predict(full.fit, type = "response")
> train$probs[1:5]
[1] 0.02052820 0.01087838 0.99992668 0.08987453 0.01379266
> contrasts(train$class)
malignant
benign            0
malignant         1
Warning message:
  In read.dcf(file.path(p, "DESCRIPTION"), c("Package", "Version")) :
  cannot open compressed file 'C:/Users/ckim25/Documents/R/win-library/3.2/MASS/DESCRIPTION', probable reason 'No such file or directory'
train$predict = rep("benign", 474)
train$predict[train$probs=0.5]="malignant"
Error: unexpected '=' in "train$predict[train$probs="
train$predict[train$probs>0.5]="malignant"
table(train$predict, train$class)

benign malignant
benign       294         7
malignant      8       165
mean(train$predict==train$class)
[1] 0.9683544
test$prob = predict(full.fit)
test$prob = predict(full.fit, mewdata=test, type = "response")
test$prob = predict(full.fit, newdata=test, type = "response")
test$predict = rep("benign", 209)
test$predict[test$prob>0.5]="malignant"
table(test$predict, test$class)
benign malignant
benign       139         2
malignant      3        65          

mean(test$predict==test$class)
[1] 0.9760766

library(bestglm)
Loading required package: leaps
Warning messages:
1: package 'bestglm' was built under R version 3.2.5 
2: package 'leaps' was built under R version 3.2.5 

train$y=rep(0,474)
train$y[train$class=="malignant"]=1

head(train[ ,13])
[1] 0 0 1 0 0 0

head(train)
thick u.size u.shape adhsn s.size nucl chrom n.nuc mit     class      probs   predict y
1      5      1       1     1      2    1     3     1   1    benign 0.02052820    benign 0
3      3      1       1     1      2    2     3     1   1    benign 0.01087838    benign 0
6      8     10      10     8      7   10     9     7   1 malignant 0.99992668 malignant 1
7      1      1       1     1      2   10     3     1   1    benign 0.08987453    benign 0
9      2      1       1     1      2    1     1     1   5    benign 0.01379266    benign 0
10     4      2       1     1      2    1     2     1   1    benign 0.00842021    benign 0

biopsy.cv = train[ ,-10:-12]

head(biopsy.cv)
thick u.size u.shape adhsn s.size nucl chrom n.nuc mit y
1      5      1       1     1      2    1     3     1   1 0
3      3      1       1     1      2    2     3     1   1 0
6      8     10      10     8      7   10     9     7   1 1
7      1      1       1     1      2   10     3     1   1 0
9      2      1       1     1      2    1     1     1   5 0
10     4      2       1     1      2    1     2     1   1 0

bestglm(Xy = biopsy.cv, IC="CV", CVArgs = list(Method="HTF", K=10, REP=1), family = binomial)
Morgan-Tatar search since family is non-gaussian.
CV(K = 10, REP = 1)
BICq equivalent for q in (7.16797006619085e-05, 0.273173435514231)
Best Model:
Estimate Std. Error   z value     Pr(>|z|)
(Intercept) -7.8147191 0.90996494 -8.587934 8.854687e-18
thick        0.6188466 0.14713075  4.206100 2.598159e-05
u.size       0.6582015 0.15295415  4.303260 1.683031e-05
nucl         0.5725902 0.09922549  5.770596 7.899178e-09

reduce.fit = glm(class~thick+u.size+nucl, family = binomial, data=trian)

reduce.fit = glm(class~thick+u.size+nucl, family = binomial, data=train)
train$cv.probs = predict(reduce.fit, type="response")
train$cv.predict = rep("benign", 474)
train$cv.predict[train$cv.probs>0.5]="malignant"
table(train$cv.predict, train$class)